apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "office.fullname" . }}-config
  labels:
    {{- include "office.labels" . | nindent 4 }}
data:
  config.yaml: |
    env: {{ .Values.config.env }}
    logLevel: {{ .Values.config.logLevel }}
    frontURL: {{ .Values.config.frontURL }}
    sendEmail: {{ .Values.config.sendEmail }}
    resetPasswordURL: {{ .Values.config.resetPasswordURL }}

    client:
      logoUrl: {{ .Values.config.client.logoUrl }}
      environmentName: {{ .Values.config.client.environmentName | quote }}

    server:
      host: {{ .Values.config.server.host | quote }}
      port: {{ .Values.config.server.port }}
      readTimeout: {{ .Values.config.server.readTimeout | quote }}
      writeTimeout: {{ .Values.config.server.writeTimeout | quote }}

    rpc:
      host: {{ .Values.config.rpc.host | quote }}
      port: {{ .Values.config.rpc.port }}
      maxProcessingTime: {{ .Values.config.rpc.maxProcessingTime }}ms

    history:
      host: {{ .Values.config.history.host }}
      port: {{ .Values.config.history.port }}
      isSecure: {{ .Values.config.history.isSecure }}

    overlord:
      host: {{ .Values.config.overlord.host }}
      port: {{ .Values.config.overlord.port }}
      isSecure: {{ .Values.config.overlord.isSecure }}

    exchange:
      host: {{ .Values.config.exchange.host }}
      port: {{ .Values.config.exchange.port }}
      isSecure: {{ .Values.config.exchange.isSecure }}

    database:
      host: {{ .Values.database.host }}
      port: {{ .Values.database.port }}
      name: {{ .Values.database.name }}
      user: {{ .Values.database.user }}
      {{- if .Values.database.password }}
      pass: {{ .Values.database.password }}
      {{- end }}
      connectionTimeout: {{ .Values.database.connectionTimeout | quote }}
      compression: {{ .Values.database.compression | quote }}
      pingInterval: {{ .Values.database.pingInterval | quote }}
      minConnections: {{ .Values.database.minConnections }}
      maxConnections: {{ .Values.database.maxConnections }}

    redis:
      host: {{ .Values.redis.host }}
      port: {{ .Values.redis.port }}
      {{- if .Values.redis.password }}
      pass: {{ .Values.redis.password }}
      {{- end }}
      basePrefix: {{ .Values.redis.basePrefix }}

    queue:
      listeners:
        backoffice:
          exchangeBase: backoffice
          exchangeKind: "direct"
          queueBase: backoffice
          bindingKey: backoffice
          hashedQueueName: false
          durable: true
          autoDelete: false
          exchangeInternal: true
          exchangeNoWait: true
          count: 10
      publishers:
        overlord:
          exchangeBase: overlord
          exchangeKind: "fanout"
          bindingKey: overlord
      host:
        name: main
        host: {{ .Values.rabbitmq.host }}
        port: {{ .Values.rabbitmq.port }}
        username: {{ .Values.rabbitmq.username }}
        password: {{ .Values.rabbitmq.password }}
      options:
        retryTimes: 5
        backOffSeconds: 2

    mailgun:
      domain: {{ .Values.mailgun.domain }}
      apiKey: {{ .Values.mailgun.apiKey }}

    jwt:
      headerName: "X-Auth"
      queryName: "token"
      headerScheme: ""
      fingerprint: {{ .Values.jwt.fingerprint }}
      accessTokenLifetime: {{ .Values.jwt.accessTokenLifetime | quote }}
      refreshTokenLifetime: {{ .Values.jwt.refreshTokenLifetime | quote }}
      issuer: {{ .Values.jwt.issuer | quote }}

    totp:
      issuer: {{ .Values.totp.issuer }}
      secretSize: {{ .Values.totp.secretSize }}
      algorithm: {{ .Values.totp.algorithm }}
      period: {{ .Values.totp.period }}
      digits: {{ .Values.totp.digits }}

    tracer:
      disabled: {{ .Values.tracer.disabled }}
      url: {{ .Values.tracer.url }}
      serviceName: {{ .Values.tracer.serviceName }}

    file:
      ttl: {{ .Values.file.ttl | quote }}

    lobby:
      lobbyBaseURL: {{ .Values.lobby.lobbyBaseURL | quote }}