# Default values for pfr service
replicaCount: 2

image:
  registry: rg.fr-par.scw.cloud
  repository: ejaw/pfr
  tag: "1.0.23"
  pullPolicy: IfNotPresent

imagePullSecrets:
  - name: docker-registry-credentials

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations:
  sidecar.istio.io/inject: "false"  # Minimal Istio
  prometheus.io/scrape: "true"
  prometheus.io/port: "7610"

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  fsGroup: 1000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  allowPrivilegeEscalation: false

service:
  type: ClusterIP
  grpcPort: 7600
  httpPort: 7610
  annotations: {}

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 200m
    memory: 256Mi

autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70

nodeSelector: {}
tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app
            operator: In
            values:
            - pfr
        topologyKey: kubernetes.io/hostname

# Application Configuration
config:
  env: production
  logLevel: info
  
  server:
    host: "0.0.0.0"
    port: 7610
    readTimeout: "300s"
    writeTimeout: "300s"
  
  rpc:
    host: "0.0.0.0"
    port: 7600
    maxProcessingTime: 300000

# Database configuration
database:
  host: postgresql.rgs-infrastructure.svc.cluster.local
  port: 5432
  name: pfr
  connectionTimeout: "300s"
  compression: "zlib"
  pingInterval: "30s"
  minConnections: 10
  maxConnections: 50

# Redis configuration
redis:
  host: redis-master.rgs-infrastructure.svc.cluster.local
  port: 6379
  basePrefix: svc.pfr

# RabbitMQ configuration
rabbitmq:
  host: rabbitmq.rgs-infrastructure.svc.cluster.local
  port: 5672

# Health checks
livenessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 10
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3

# Pod Disruption Budget
podDisruptionBudget:
  enabled: true
  minAvailable: 1

# Network Policy
networkPolicy:
  enabled: false
