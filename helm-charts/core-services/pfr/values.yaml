# Default values for PFR service
replicaCount: 1

image:
  repository: rg.fr-par.scw.cloud/ejaw/pfr-api
  tag: "1.1.48"
  pullPolicy: IfNotPresent

imagePullSecrets:
  - name: docker-registry-credentials

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations:
  sidecar.istio.io/inject: "false"
  prometheus.io/scrape: "true"
  prometheus.io/port: "7610"

podSecurityContext:
  runAsNonRoot: false
  runAsUser: 0
  fsGroup: 0

securityContext:
  privileged: true
  allowPrivilegeEscalation: true
  runAsUser: 0
  runAsNonRoot: false
  capabilities:
    add:
    - ALL
  readOnlyRootFilesystem: false

service:
  type: ClusterIP
  grpcPort: 7600
  httpPort: 7610
  annotations: {}

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 256Mi

autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70

nodeSelector:
  workload: core-services

  
tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app
            operator: In
            values:
            - pfr
        topologyKey: kubernetes.io/hostname

# Application Configuration
config:
  overlord:
    host: overlord-service.rgs-core.svc.cluster.local
    port: 7500

# Database configuration
database:
  host: 77.93.172.81  # External database
  port: 5432
  name: pfr
  user: pfr
  password: 5c0b7443-35ce-4ee6-814e-3a06848dd627
  connectionTimeout: "300s"
  compression: "zlib"
  pingInterval: "30s"
  minConnections: 100
  maxConnections: 200

# Integrators configuration
integrators:
  ninjagaming:
    apiSecret: AlOGYrOunT
  direct:
    apiKey: testtest11
    apiSecret: superSecret
    url: https://example.com
    withLogs: true

# Tracer configuration
tracer:
  disabled: true
  url: http://jaeger-collector.monitoring.svc.cluster.local:14268/api/traces
  serviceName: pfr

# Health checks
livenessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 10
  failureThreshold: 5

readinessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 10
  failureThreshold: 5

# Pod Disruption Budget
podDisruptionBudget:
  enabled: true
  minAvailable: 1